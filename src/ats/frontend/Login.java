/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ats.frontend;


import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import static java.lang.Integer.parseInt;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;


/**
 *
 * @author armor
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form ATSGUI
     */
    
    static MainGUI m;
    
    public static DBInter db = new DBInter();
    

    
    
    public Login() {
        
        
        try {UIManager.setLookAndFeel( "com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        UIManager.put("nimbusBase", new Color(242, 107, 58));
        UIManager.put("nimbusBlueGrey", new Color(242, 107, 58));
        UIManager.put("control", new Color(214,217,223));
        UIManager.put("nimbusSelectionBackground", new Color(169,46,34));
        
        
        
        }
        catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
        }
        
        
        
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        
        
        
        
        
        
    }
    
/*public java.sql.Connection getConnection() {
try {
Class.forName("com.mysql.jdbc.Driver");
Properties connectionProps= new Properties();
connectionProps.put("user", "root");
connectionProps.put("password", "220396");
    String dbName="ats_sysdb";
    String portNumber="3306";
    String serverName="localhost";
    con = DriverManager.getConnection("jdbc:mysql://" + serverName+ ":" + portNumber
            + "/" + dbName, connectionProps);
}


finally{
return con;
}
}*/

public int getDetails(String u, String p) throws SQLException {
    String username = u;
    String pass = p;
    try {
        java.sql.Connection con=db.getConnectionFromPool();
        PreparedStatement ps = con.prepareStatement("SELECT username,password,type FROM staff");
        
        try (ResultSet rs = ps.executeQuery()) {
            while(rs.next())
            if (pass.equals(rs.getString(2))&&username.equals(rs.getString(1))) {
                
                return rs.getInt(3);
            }
        }
        db.returnConnectionToPool(con);
    }
    catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            invalid(true);
        }
        return -1;

    
}


public void resetTextFields()
{
    userText.setText("Username");
    passTest.setText("********");
    
}
public boolean getRemember()
{
    if(rememberMe.isSelected()==true)
        return false;
    return true;
    
}

public void invalid(boolean webDown)
{
    if(webDown)
        userText.setText("Server Down");
    else
        userText.setText("Invalid Credidentials");
    
    
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        loginButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        userText = new javax.swing.JTextField();
        passTest = new javax.swing.JPasswordField();
        rememberMe = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ATS System");

        background.setBackground(new java.awt.Color(51, 51, 51));
        background.setForeground(new java.awt.Color(51, 51, 51));

        loginButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        loginButton.setText("LogIn");
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginButtonMouseClicked(evt);
            }
        });

        exitButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        userText.setBackground(new java.awt.Color(0, 0, 0));
        userText.setForeground(new java.awt.Color(255, 255, 255));
        userText.setText("Username");
        userText.setToolTipText("Username");
        userText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userTextFocusGained(evt);
            }
        });
        userText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTextActionPerformed(evt);
            }
        });

        passTest.setBackground(new java.awt.Color(0, 0, 0));
        passTest.setForeground(new java.awt.Color(255, 255, 255));
        passTest.setText("Password");
        passTest.setToolTipText("Password");
        passTest.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passTestFocusGained(evt);
            }
        });

        rememberMe.setBackground(new java.awt.Color(0, 0, 0));
        rememberMe.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rememberMe.setForeground(new java.awt.Color(255, 255, 255));
        rememberMe.setText("Remember Me");

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                        .addComponent(exitButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                        .addComponent(rememberMe)
                        .addGap(18, 18, 18)
                        .addComponent(loginButton))
                    .addComponent(userText)
                    .addComponent(passTest))
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(exitButton)
                    .addComponent(rememberMe))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userTextActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void userTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userTextFocusGained
        this.userText.selectAll();
    }//GEN-LAST:event_userTextFocusGained

    private void passTestFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passTestFocusGained
        this.passTest.selectAll();
    }//GEN-LAST:event_passTestFocusGained

    private void loginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseClicked
        
        try {
            switch (getDetails(this.userText.getText(),this.passTest.getText())) {
                case 0:
                    m = new MainGUI(0,this.userText.getText());
                    m.setVisible(true);
                    this.setVisible(false);
                    break;
                case 1:
                    m = new MainGUI(1,this.userText.getText());
                    m.setVisible(true);
                    this.setVisible(false);
                    break;
                case 2:
                    m = new MainGUI(2,this.userText.getText());
                    m.setVisible(true);
                    this.setVisible(false);
                    break;
                default:
                    invalid(false);
                    
            }
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(0);
        }
        
    }//GEN-LAST:event_loginButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Login().setVisible(true);
        });
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passTest;
    private javax.swing.JCheckBox rememberMe;
    private javax.swing.JTextField userText;
    // End of variables declaration//GEN-END:variables
}
